* org-working-set

  Manage a working-set of org-nodes
  
  org-working-set is a package for org-mode within emacs.

  Read below for a description.

  The current version is 1.0.4.

** Table of Contents

   - [[#about-this-package][About this Package]]
   - [[#screenshot][Screenshot]]
   - [[#files][Files]]
   - [[#releasing-a-new-version][Releasing a new version]]
   - [[#latest-change-log][Latest Change Log]]

** About this Package

*** Purpose

    Maintain a small and changing subset of your org-nodes to visit with ease.
    
    The working-set is a small set of nodes, among which you can switch
    rapidly; it is expected to change on a daily or even hourly basis.  Put
    nodes into your working set in order to return easily after any
    interruption.
    
    Once you have added nodes to your working set, there are two ways to
    traverse them (both are accessible through the central function
    `org-working-set'): cycling through your working set is the quickest
    way to return to the current node or go to others; alternatively,
    invoking the working set menu allows for better control but may require
    more keystrokes.
    
    Please note, that org-working-set adds an id-property to all nodes in
    the working-set.
    
    The list of ids from the nodes of your working-set is stored within the
    property-drawer of a distinguished node specified via
    `org-working-set-id'; this can be any node you choose and is itself not
    part of the working-set.
    
    Remark: Depending on your needs you might also find these packages
    interesting for providing somewhat similar functionality: org-now and
    org-mru-clock.

*** Setup

    - org-working-set can be installed with package.el
    - Invoke `org-working-set', it will explain and assist you to set the
      customizable variable `org-working-set-id'

** Screenshot

   Normally you won't see much of this package, but if requested it shows a menu of 
   all nodes within the working set (lower window).

   [[images/screenshot1.png]]

** Files

*** Implementation

    - org-working-set.el :: The complete lisp source

*** Building

    - Rakefile :: Helpful Ruby-Tasks for building

*** Tests
    
    In subdir tests.

    - owst.el :: ert-tests for org-working-set
    - run-tests.ps1 :: Windows command file to start an emacs, which
                       is specifically prepared for the tests
    - run-tests.el :: Customizations for the tests

** Releasing a new version

*** Testing and checking

    - ert
    - (byte-compile-file "org-working-set.el")
    - elint-current-buffer
    - checkdoc
    - package-lint-current-buffer ;; ignore messages about org-ws--prefix

*** Preparing
    
    - Update Version number in org-working-set.el
    - Update Change Log in org-working-set.el
    - Check and update Commentary in org-working-set.el
    - Run rake to copy those pieces of information into 
      README.org and ChangeLog.org
    - git add/commit as appropriate 
    - git tag -a -m x.y.z x.y.z ; git push ; git push --tags

** Latest Change Log

   See ChangeLog.org for older notes.

*** 1.0

    - Moved functions for working set into its own file
    - Show breadcrumbs in working-set-menu
    - Prepare for melpa
  

